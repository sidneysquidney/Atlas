
/.hint = translate('cms.hints.event.venue.field')

.field
  .hint = translate('cms.hints.event.venue.search')
  .ui.fluid.flipped.search id='js-venue-search'
    .ui.icon.input
      input.prompt type='text' placeholder=translate('cms.actions.simple.searching') autocomplete='off'
      i.search.icon

.ui.fluid.horizontal.card id='js-venue-card' style=('display: none' unless venue.present?)
  .content
    - if venue.present?
      .header = venue.name || venue.street
      .meta = venue.name ? venue.address : venue.address.split(', ', 2).last
    - else
      .header
      .meta

- unless @record.new_record? || @record.venue.nil?
  #map data-latitude=@record.venue.latitude data-longitude=@record.venue.longitude data-circle=[@record.area.latitude, @record.area.longitude, @record.area.radius] data-error=(@record.errors.include?(:venue) ? 'true' : nil)
  = f.error :venue

.ui.accordion.required.field id='js-venue-fields'
  .title class=('active' if venue&.new_record? || venue&.errors&.present?)
    i.dropdown.icon
    = f.label translate('cms.hints.event.venue.view_fields'), required: true
  .content class=('active' if venue&.new_record? || venue&.errors&.present?)
    - f.object.venue ||= Venue.new
    = f.simple_fields_for :venue do |ff|
      - new_venue = f.object.venue.new_record?
      = ff.input :id, as: :hidden unless f.object.venue.new_record?
      .two.fields
        = ff.input :name
        = ff.input :street
      .ui.orange.message
        i.warning.sign.icon
        = translate('cms.hints.edit_warning')
      .three.fields
        /= ff.input :id, disabled: true unless f.object.venue.new_record?
        = ff.input :place_id
        = ff.input :latitude
        = ff.input :longitude
      .four.fields
        = ff.input :city
        = ff.input :region_code
        = ff.input :country_code, as: :string
        = ff.input :post_code
